#
# Manifest for PSGet_Use-AzureAD module
#
# Generated by: MS-LUF
#
# Generated on : 27/04/2020
#

@{

# Module de script ou fichier de module binaire associe e ce manifeste
RootModule = 'use-AzureAD.psm1'

# Numero de version de ce module.
ModuleVersion = '0.5'

# editions PS prises en charge
# CompatiblePSEditions = @()

# ID utilise pour identifier de maniere unique ce module
GUID = '567c517c-f1b5-43e1-9249-d1a60bf83a41'

# Auteur de ce module
Author = 'LCU'

# Societe ou fournisseur de ce module
CompanyName = 'lucas-cueff.com'

# Declaration de copyright pour ce module
Copyright = '(c) 2020 lucas-cueff.com Distributed under Artistic Licence 2.0 (https://opensource.org/licenses/artistic-license-2.0).'

# Description de la fonctionnalite fournie par ce module
Description = 'Add few cmdlets to facilitate your Azure AD management, especially with Administrative Unit, through PowerShell interface'

# Version minimale du moteur Windows PowerShell requise par ce module
PowerShellVersion = '5.1'

# Nom de l'hote Windows PowerShell requis par ce module
# PowerShellHostName = ''

# Version minimale de l'hete Windows PowerShell requise par ce module
# PowerShellHostVersion = ''

# Version minimale du Microsoft .NET Framework requise par ce module. Cette configuration requise est valide uniquement pour PowerShell Desktop Edition.
# DotNetFrameworkVersion = ''

# Version minimale de leenvironnement CLR (Common Language Runtime) requise par ce module. Cette configuration requise est valide uniquement pour PowerShell Desktop Edition.
# CLRVersion = ''

# Architecture de processeur (None, X86, Amd64) requise par ce module
# ProcessorArchitecture = ''

# Modules qui doivent etre importes dans l environnement global prealablement a l importation de ce module
# RequiredModules = @()

# Assemblys qui doivent etre charges prealablement a l importation de ce module
# RequiredAssemblies = @()

# Fichiers de script (.ps1) executes dans l environnement de l appelant prealablement a leimportation de ce module
# ScriptsToProcess = @()

# Fichiers de types (.ps1xml) a charger lors de l importation de ce module
# TypesToProcess = @()

# Fichiers de format (.ps1xml) a charger lors de l importation de ce module
# FormatsToProcess = @()

# Modules a importer en tant que modules imbriques du module specifie dans RootModule/ModuleToProcess
# NestedModules = @()

# Fonctions a exporter a partir de ce module. Pour de meilleures performances, neutilisez pas de caracteres generiques et ne supprimez pas leentree. Utilisez un tableau vide si vous neavez aucune fonction a exporter.
FunctionsToExport = 'Clear-AzureADAccessToken','Connect-AzureADFromAccessToken','Get-AzureADAccessToken','Get-AzureADAdministrativeUnitAllMembers','Get-AzureADMyInfo','Get-AzureADTenantInfo','Get-AzureADUserAllInfo',
                    'Invoke-APIMSGraphBeta','Set-AzureADAdministrativeUnitAdminRole','Set-AzureADProxy','Sync-ADOUtoAzureADAdministrativeUnit','Sync-ADUsertoAzureADAdministrativeUnitMember',
                    'Test-ADModule','Test-AzureADAccesToken'

# Applets de commande a exporter a partir de ce module. Pour de meilleures performances, neutilisez pas de caracteres generiques et ne supprimez pas l entree. Utilisez un tableau vide si vous neavez aucune applet de commande e exporter.
CmdletsToExport = @()

# Variables a exporter a partir de ce module
# VariablesToExport = @()

# Alias a exporter a partir de ce module. Pour de meilleures performances, neutilisez pas de caracteres generiques et ne supprimez pas leentree. Utilisez un tableau vide si vous n avez aucun alias a exporter.
AliasesToExport = @()

# Ressources DSC a exporter depuis ce module
# DscResourcesToExport = @()

# Liste de tous les modules empaquetes avec ce module
# ModuleList = @()

# Liste de tous les fichiers empaquetes avec ce module
FileList = 'use-AzureAD.psm1'

# Donnees privees a transmettre au module specifie dans RootModule/ModuleToProcess. Cela peut egalement inclure une table de hachage PSData avec des metadonnees de modules supplementaires utilisees par PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('API','AzureAD','Azure','MSGraph','GraphAPI','Administrative Unit')

        # A URL to the license for this module.
        # LicenseUri = ''

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/MS-LUF/Use-AzureAD'

        # A URL to an icon representing this module.
        IconUri = 'http://www.lucas-cueff.com/files/gallery.png'

        # ReleaseNotes of this module
        ReleaseNotes = 'v0.5 : first public release : get a valid access token (MFA supported) for Microsoft Graph Beta APIs, get a valid token for Microsoft Graph API standard / cloud endpoint (ressource graph.windows.net) and be able to use AzureADPreview cmdlets without reauthenticating, get all properties available (ex : extensionattribute) for an AAD user account, set a web proxy to be used with Use-AzureAD and AzureADPreview cmdlets, get all info for current logged in (@ Azure AD Tenant and Graph APIs) AAD user account, create / synchronize your on premise Active Directory OUs with Azure AD Administrive Units (not managed currently through Azure AD Connect or other Microsoft cmdlets / modules), add / synchronize your on premise Active Directory users DN with Azure AD Administrative Unit membership (not managed currently through Azure AD Connect or other Microsoft cmdlets / modules), add / remove Azure AD user account in Administrative Unit Role (everything managed in an easy and smooth way including, enabling the AAD role if missing and so on), list all members of an Azure AD Administrative Unit'
        # External dependent modules of this module
        # ExternalModuleDependencies = ''

    } # End of PSData hashtable
    
 } # End of PrivateData hashtable

# URI HelpInfo de ce module
# HelpInfoURI = ''

# Le prefixe par defaut des commandes a ete exporte a partir de ce module. Remplacez le prefixe par defaut a l aide de Import-Module -Prefix.
# DefaultCommandPrefix = ''

}